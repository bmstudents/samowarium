name: Deploy to development stand

concurrency: deploy

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'Commit to checkout'
        required: false
      debug-logs:
        description: 'Enable DEBUG level logs'
        type: boolean
        default: false
      ip-check:
        description: 'Enable IP check'
        type: boolean
        default: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout specific commit
      if: ${{ inputs.commit != '' }}
      run:	git checkout ${{ inputs.commit }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Cache image
    #   uses: satackey/action-docker-layer-caching@v0.0.11
    #   continue-on-error: true

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: vzalygin/samowarium:dev

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    environment: dev
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkout specific commit
      if: ${{ inputs.commit != '' }}
      run:	git checkout ${{ inputs.commit }}

    - name: Prepare configuration
      run: |
        mv .env.dev .env;
        echo ENV=DEV >> .env;
        echo ENABLE_PROMETHEUS_METRICS_SERVER=1 >> .env;
        echo VERSION=v${{github.run_number}}-$(git rev-parse --short HEAD) >> .env;

        echo TELEGRAM_TOKEN='${{ secrets.TG_TOKEN }}' >> .env;
        echo ENCRYPTION='${{ secrets.ENCRYPTION }}' >> .env;

        echo POSTGRES_DB='${{ vars.POSTGRES_DB }}' >> .env;
        echo POSTGRES_USER='${{ vars.POSTGRES_USER }}' >> .env;
        echo POSTGRES_PASSWORD='${{ secrets.POSTGRES_PASSWORD }}' >> .env;
        echo POSTGRES_HOST='${{ vars.POSTGRES_HOST }}' >> .env;

    - name: Enable DEBUG logs
      if: ${{ inputs.debug-logs }}
      run: |
        echo DEBUG= >> .env;

    - name: Enable IP check
      if: ${{ inputs.ip-check }}
      run: |
        echo IP_CHECK= >> .env;

    - name: Configure Docker Host
      uses: khaledez/configure-docker-host@v2
      with:
        host: ${{ secrets.HOST }}
        user: ${{ secrets.SSH_USER }}
        ssh-private-key: ${{ secrets.SSH_KEY }}

    - name: Pull & Reload
      run: |
          DOCKER_TAG=dev \
          docker compose \
          -p samowarium-dev \
          up -d \
          --pull always

    - name: Prune images
      run: |
          docker image prune -f

    - name: Remove configuration files
      run: |
          rm ./.env
